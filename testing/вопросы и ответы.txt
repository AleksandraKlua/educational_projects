Вопрос 1. Каковы преимущества механизма наследования?
   а) Сокращение объема кода.
   б) Возможность повторного использования кода.
   в) Экономия времени.
   г) Все это является преимуществами наследования.
Правильный ответ: г
Вопрос 2. Что необходимо для наследования класса?
   а) Указать ключевое слово extends и имя родительского класса.
   б) Указать ключевое слово implements и имя родительского класса.
   в) Указать ключевое слово includes и имя родительского класса.
   г) Ничего не нужно делать, все классы и так наследуются.
Правильный ответ: а
Вопрос 3. Какое количество классов можно унаследовать?
   а) Большое множество.
   б) Максимум 10.
   в) Максимум 2.
   г) Только 1.
Правильный ответ: г
Вопрос 4. Как класс может унаследовать интерфейс?
   а) Указать ключевое слово includes и имя интерфейса.
   б) Указать ключевое слово extends и имя интерфейса.
   в) Указать ключевое слово implements и имя интерфейса.
   г) Ничего не нужно делать, интерфейс и так наследуется.
Правильный ответ: в
Вопрос 5. Может ли интерфейс наследовать класс?
   а) Нет, в качестве предка - только интерфейс.
   б) Да, указав ключевое слово extends и имя класса.
   в) Да, указав ключевое слово implements и имя класса.
   г) Да, интерфейсы по умолчанию наследует класс, указанный ранее.
Правильный ответ: а
Вопрос 6. Как называется класс, от которого происходит наследование?
   а) Потомок.
   б) Родительский класс.
   в) Наследник.
   г) Производный класс. 
Правильный ответ: б
Вопрос 7. Можно ли наследовать внутренние классы? 
   а) Да, можно наследовать от других классов.
   б) Да, только если он находится в интерфейсе.
   в) Да, только в пределах одного пакета.
   г) Нельзя.
Правильный ответ:  а
Вопрос 8. Какие способы изменения поведения и структуры класса возможны при создании подкласса на основе одного или нескольких суперклассов?
   а) Расширение суперкласса путем добавления новых данных и методов.
   б) Замена методов суперкласса путем их переопределения.
   в) Слияние методов из суперклассов вызовом одноименных методов из соответствующих суперклассов.
   г) Все ответы верны.
Правильный ответ: г
Вопрос 9. Какие правила существуют при приведении ссылочных типов?
   а) Объект всегда может быть приведен к типу своего непосредственного суперкласса.
   б) Приведение ссылочных типов может выполняться по иерархии классов сколь угодно глубоко.
   в) Любой класс ссылочного типа всегда можно привести к типу Object.
   г) Все ответы верны.
Правильный ответ: г
Вопрос 10. К каким переменным и методам родительского класса не имеет доступ наследник?
   а) С модификатором public.
   б) С модификатором private.
   в) С методом super.
   г) С модификатором protected.
Правильный ответ: б
Вопрос 11. Можно ли переопределить метод класса-родителя? 
   а) Нельзя.
   б) Можно, просто написав этот метод с таким же названием заново в наследнике.
   в) Можно, указав в наследнике перед методом родителя @Override.
   г) Можно, заключив метод в лямбда-выражение.
Правильный ответ: в
Вопрос 12. Как запретить наследование?
   а) С помощью модификатора final для родительского класса.
   б) С помощью метода super в родительском классе.
   в) Указав модификатор protected для родительского класса. 
   г) Никак.
Правильный ответ: а
Вопрос 13. Могут ли классы наследоваться от нескольких интерфейсов? 
   а) Нет, аналогично наследованию от нескольких классов.
   б) Да, с помощью ключевого слова includes и перечисления интерфейсов через &.
   в) Да, с помощью ключевого слова implements и перечисления интерфейсов через запятую.
   г) Да, с помощью ключевого слова extends и перечисления интерфейсов через запятую.
Правильный ответ: в
Вопрос 14. Для чего можно использовать ключевое слово super?
   а) Для ссылки на текущий экземпляр класса.
   б) Для вызова констуктора одного типа в родительском классе.
   в) Для выдачи приоритета экземпляру родительского класса.
   г) Для вызова конструктора суперкласса и для обращения к члену суперкласса, скрытому членом подкласса.
Правильный ответ: г
Вопрос 15. Как проверить, является ли объект на который ссылается переменная, создан на основе какого-либо класса?
   а) Нельзя проверить.
   б) С помощью оператора instanceof.
   в) С помощью ключевого слова extends.
   г) С помощью ключевого слова implements.
Правильный ответ: б
Вопрос 16. Что из этого является одиночным наследованием? 
   а) public class A { ... } public class B extends A { ... }
   б) public class A { ... } public class B extends A { ... } public class C extends B { ... }
   в) public class A { ... } public class B extends A { ... } public class C extends A { ... }
   г) public class A { ... } public class B { ... } public class C extends A, B { ... }
Правильный ответ: а
Вопрос 17. Что из этого является многоуровневым наследованием? 
   а) public class A { ... } public class B extends A { ... }
   б) public class A { ... } public class B extends A { ... } public class C extends A { ... }
   в) public class A { ... } public class B extends A { ... } public class C extends B { ... }
   г) public class A { ... } public class B { ... } public class C extends A, B { ... }
Правильный ответ: в
Вопрос 18. Что из этого является иерархическим наследованием?
   а) public class A { ... } public class B extends A { ... }
   б) public class A { ... } public class B { ... } public class C extends A, B { ... }
   в) public class A { ... } public class B extends A { ... } public class C extends B { ... }
   г) public class A { ... } public class B extends A { ... } public class C extends A { ... }
Правильный ответ: г
Вопрос 19. Что из этого является многоуровневым наследованием, но неподдерживаемым в Java?
   а) public class A { ... } public class B extends A { ... }
   б) public class A { ... } public class B { ... } public class C extends A, B { ... }
   в) public class A { ... } public class B extends A { ... } public class C extends B { ... }
   г) public class A { ... } public class B extends A { ... } public class C extends A { ... }
Правильный ответ: б
Вопрос 20. public class Figure { ... } public class Ellipse extends Figure { ... } public class Triangle extends Figure { ... } public class Circle extends Ellipse { ... } Какое утверждение неверно?
   а) Figure является суперклассом класса Ellipse.
   б) Figure является суперклассом класса Triangle.
   в) Ellipse и Triangle являются подклассами класса Figure.
   г) Circle одновременно не является подклассом классов Ellipse и Figure.
Правильный ответ: г